<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.watermelon.domain.music.MusicRepositoryTest" tests="1" skipped="0" failures="0" errors="0" timestamp="2020-11-11T07:08:42" hostname="LAPTOP-OVQJ7QLO" time="1.701">
  <properties/>
  <testcase name="music_list" classname="com.watermelon.domain.music.MusicRepositoryTest" time="1.701"/>
  <system-out><![CDATA[16:08:29.520 [Test worker] DEBUG org.springframework.test.context.junit4.SpringJUnit4ClassRunner - SpringJUnit4ClassRunner constructor called with [class com.watermelon.domain.music.MusicRepositoryTest]
16:08:29.536 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
16:08:29.551 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
16:08:29.598 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [com.watermelon.domain.music.MusicRepositoryTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
16:08:29.645 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.watermelon.domain.music.MusicRepositoryTest], using SpringBootContextLoader
16:08:29.645 [Test worker] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [com.watermelon.domain.music.MusicRepositoryTest]: class path resource [com/watermelon/domain/music/MusicRepositoryTest-context.xml] does not exist
16:08:29.645 [Test worker] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [com.watermelon.domain.music.MusicRepositoryTest]: class path resource [com/watermelon/domain/music/MusicRepositoryTestContext.groovy] does not exist
16:08:29.645 [Test worker] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [com.watermelon.domain.music.MusicRepositoryTest]: no resource found for suffixes {-context.xml, Context.groovy}.
16:08:29.645 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.watermelon.domain.music.MusicRepositoryTest]: MusicRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
16:08:29.760 [Test worker] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.watermelon.domain.music.MusicRepositoryTest]
16:08:29.916 [Test worker] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [C:\Users\sigyung\works\waterMelon\CRUD\build\classes\java\main\com\watermelon\Application.class]
16:08:29.916 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.watermelon.Application for test class com.watermelon.domain.music.MusicRepositoryTest
16:08:30.119 [Test worker] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [com.watermelon.domain.music.MusicRepositoryTest]: using defaults.
16:08:30.119 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
16:08:30.151 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@67b24ee9, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@56f9557b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@237162c8, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@652b6c83, org.springframework.test.context.support.DirtiesContextTestExecutionListener@101bb3c9, org.springframework.test.context.transaction.TransactionalTestExecutionListener@c556e3c, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@249a2a5c, org.springframework.test.context.event.EventPublishingTestExecutionListener@1a6b0538, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@57237847, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@70a0c811, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@51dc493, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@471d43cd, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@b30ea29, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7da65b1e]
16:08:30.166 [Test worker] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.watermelon.domain.music.MusicRepositoryTest]
16:08:30.166 [Test worker] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.watermelon.domain.music.MusicRepositoryTest]
16:08:30.166 [Test worker] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.watermelon.domain.music.MusicRepositoryTest]
16:08:30.166 [Test worker] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.watermelon.domain.music.MusicRepositoryTest]
16:08:30.166 [Test worker] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.watermelon.domain.music.MusicRepositoryTest]
16:08:30.166 [Test worker] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.watermelon.domain.music.MusicRepositoryTest]
16:08:30.166 [Test worker] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.watermelon.domain.music.MusicRepositoryTest]
16:08:30.166 [Test worker] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.watermelon.domain.music.MusicRepositoryTest]
16:08:30.166 [Test worker] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.watermelon.domain.music.MusicRepositoryTest]
16:08:30.166 [Test worker] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.watermelon.domain.music.MusicRepositoryTest]
16:08:30.182 [Test worker] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@59f4c4d8 testClass = MusicRepositoryTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@24d62501 testClass = MusicRepositoryTest, locations = '{}', classes = '{class com.watermelon.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@f96bc73, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3a14c2d4, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@21ff52e0, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7ef8e84, org.springframework.boot.test.context.SpringBootTestArgs@1], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false]], class annotated with @DirtiesContext [false] with mode [null].
16:08:30.182 [Test worker] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.watermelon.domain.music.MusicRepositoryTest]
16:08:30.182 [Test worker] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.watermelon.domain.music.MusicRepositoryTest]
16:08:30.197 [Test worker] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@59f4c4d8 testClass = MusicRepositoryTest, testInstance = com.watermelon.domain.music.MusicRepositoryTest@54b785ec, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@24d62501 testClass = MusicRepositoryTest, locations = '{}', classes = '{class com.watermelon.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@f96bc73, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3a14c2d4, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@21ff52e0, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7ef8e84, org.springframework.boot.test.context.SpringBootTestArgs@1], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false]]].
16:08:30.229 [Test worker] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v2.3.2.RELEASE)

2020-11-11 16:08:30.932  INFO 15928 --- [    Test worker] c.w.domain.music.MusicRepositoryTest     : Starting MusicRepositoryTest on LAPTOP-OVQJ7QLO with PID 15928 (started by sigyung in C:\Users\sigyung\works\waterMelon\CRUD)
2020-11-11 16:08:30.932  INFO 15928 --- [    Test worker] c.w.domain.music.MusicRepositoryTest     : No active profile set, falling back to default profiles: default
2020-11-11 16:08:32.169  INFO 15928 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-11-11 16:08:32.340  INFO 15928 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 162ms. Found 6 JPA repository interfaces.
2020-11-11 16:08:33.590  INFO 15928 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 0 (http)
2020-11-11 16:08:33.621  INFO 15928 --- [    Test worker] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-11-11 16:08:33.621  INFO 15928 --- [    Test worker] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-11-11 16:08:33.856  INFO 15928 --- [    Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-11-11 16:08:33.856  INFO 15928 --- [    Test worker] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2877 ms
2020-11-11 16:08:34.465  INFO 15928 --- [    Test worker] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-11-11 16:08:34.590  INFO 15928 --- [         task-1] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-11-11 16:08:34.749  INFO 15928 --- [         task-1] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.4.18.Final
2020-11-11 16:08:35.140  INFO 15928 --- [         task-1] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-11-11 16:08:35.390  INFO 15928 --- [         task-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-11-11 16:08:36.202  INFO 15928 --- [         task-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-11-11 16:08:36.234  INFO 15928 --- [         task-1] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Hibernate: alter table artist drop foreign key FKoy4pum8l6xy9jdjdnyxaosyli
Hibernate: alter table artist_album drop foreign key FK404ombtv9tdiif7neiufea2wr
Hibernate: alter table artist_album drop foreign key FKniaxtauwf8vqy42fec9l9sfo4
Hibernate: alter table artist_music drop foreign key FKjd69cs7qqxs7srsa0nh8chps6
Hibernate: alter table artist_music drop foreign key FK9spwv12fhowtlqetheo4d14c5
Hibernate: alter table music drop foreign key FK1gpg5o9xo7gkxeietx17guu2g
Hibernate: drop table if exists album
Hibernate: drop table if exists artist
Hibernate: drop table if exists artist_album
Hibernate: drop table if exists artist_music
Hibernate: drop table if exists music
Hibernate: drop table if exists user
Hibernate: create table album (id bigint not null auto_increment, created_at datetime, updated_at datetime, agency varchar(100), deleted_at datetime, information TEXT, publish_date datetime, publisher varchar(100), title varchar(100) not null, type varchar(20), primary key (id)) engine=InnoDB
Hibernate: create table artist (id bigint not null auto_increment, created_at datetime, updated_at datetime, activity varchar(30), agency varchar(100), debut datetime, debut_music varchar(100), deleted_at datetime, fan_club TEXT, gender varchar(10), genre varchar(30), information TEXT, is_concoction TINYINT, is_group TINYINT, name varchar(100) not null, nationality varchar(100), type TEXT, artist_id bigint, primary key (id)) engine=InnoDB
Hibernate: create table artist_album (id bigint not null auto_increment, created_at datetime, updated_at datetime, deleted_at datetime, album_id bigint, artist_id bigint, primary key (id)) engine=InnoDB
Hibernate: create table artist_music (id bigint not null auto_increment, deleted_at datetime, artist_id bigint, music_id bigint, primary key (id)) engine=InnoDB
Hibernate: create table music (id bigint not null auto_increment, created_at datetime, updated_at datetime, arranger varchar(100), composer varchar(100) not null, deleted_at datetime, genre varchar(255), hits integer default 0, is_title TINYINT default 0, likes integer default 0, lyrics TEXT, release_date datetime, songwriter varchar(100) not null, thumbnail longblob, title varchar(100) not null, album_id bigint, primary key (id)) engine=InnoDB
Hibernate: create table user (id bigint not null auto_increment, created_at datetime, updated_at datetime, deleted_at datetime, email varchar(100), nickname varchar(255), password varchar(100) not null, profile varchar(100), role tinyint, salt varchar(8), primary key (id)) engine=InnoDB
Hibernate: alter table user add constraint UK_ob8kqyqqgmefl0aco34akdtpe unique (email)
Hibernate: alter table artist add constraint FKoy4pum8l6xy9jdjdnyxaosyli foreign key (artist_id) references artist (id)
Hibernate: alter table artist_album add constraint FK404ombtv9tdiif7neiufea2wr foreign key (album_id) references album (id)
Hibernate: alter table artist_album add constraint FKniaxtauwf8vqy42fec9l9sfo4 foreign key (artist_id) references artist (id)
Hibernate: alter table artist_music add constraint FKjd69cs7qqxs7srsa0nh8chps6 foreign key (artist_id) references artist (id)
Hibernate: alter table artist_music add constraint FK9spwv12fhowtlqetheo4d14c5 foreign key (music_id) references music (id)
Hibernate: alter table music add constraint FK1gpg5o9xo7gkxeietx17guu2g foreign key (album_id) references album (id)
2020-11-11 16:08:38.970  INFO 15928 --- [         task-1] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-11-11 16:08:38.985  INFO 15928 --- [         task-1] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-11-11 16:08:41.076  INFO 15928 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 55422 (http) with context path ''
2020-11-11 16:08:41.076  INFO 15928 --- [    Test worker] DeferredRepositoryInitializationListener : Triggering deferred initialization of Spring Data repositories…
2020-11-11 16:08:42.042  INFO 15928 --- [    Test worker] DeferredRepositoryInitializationListener : Spring Data repositories initialized!
2020-11-11 16:08:42.058  INFO 15928 --- [    Test worker] c.w.domain.music.MusicRepositoryTest     : Started MusicRepositoryTest in 11.819 seconds (JVM running for 15.852)
Hibernate: insert into album (created_at, updated_at, agency, deleted_at, information, publish_date, publisher, title, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into music (created_at, updated_at, album_id, arranger, composer, deleted_at, genre, hits, is_title, likes, lyrics, release_date, songwriter, thumbnail, title) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into music (created_at, updated_at, album_id, arranger, composer, deleted_at, genre, hits, is_title, likes, lyrics, release_date, songwriter, thumbnail, title) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into artist (created_at, updated_at, activity, agency, debut, debut_music, deleted_at, fan_club, gender, genre, artist_id, information, is_concoction, is_group, name, nationality, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into artist (created_at, updated_at, activity, agency, debut, debut_music, deleted_at, fan_club, gender, genre, artist_id, information, is_concoction, is_group, name, nationality, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into artist_music (artist_id, deleted_at, music_id) values (?, ?, ?)
Hibernate: insert into artist_music (artist_id, deleted_at, music_id) values (?, ?, ?)
Hibernate: insert into artist_music (artist_id, deleted_at, music_id) values (?, ?, ?)
Hibernate: insert into artist_music (artist_id, deleted_at, music_id) values (?, ?, ?)
2020-11-11 16:08:42.991  INFO 15928 --- [o-auto-1-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-11 16:08:42.991  INFO 15928 --- [o-auto-1-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-11-11 16:08:43.038  INFO 15928 --- [o-auto-1-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 47 ms
Hibernate: select music0_.id as id1_4_, music0_.created_at as created_2_4_, music0_.updated_at as updated_3_4_, music0_.album_id as album_i16_4_, music0_.arranger as arranger4_4_, music0_.composer as composer5_4_, music0_.deleted_at as deleted_6_4_, music0_.genre as genre7_4_, music0_.hits as hits8_4_, music0_.is_title as is_title9_4_, music0_.likes as likes10_4_, music0_.lyrics as lyrics11_4_, music0_.release_date as release12_4_, music0_.songwriter as songwri13_4_, music0_.thumbnail as thumbna14_4_, music0_.title as title15_4_ from music music0_
Hibernate: select album0_.id as id1_0_0_, album0_.created_at as created_2_0_0_, album0_.updated_at as updated_3_0_0_, album0_.agency as agency4_0_0_, album0_.deleted_at as deleted_5_0_0_, album0_.information as informat6_0_0_, album0_.publish_date as publish_7_0_0_, album0_.publisher as publishe8_0_0_, album0_.title as title9_0_0_, album0_.type as type10_0_0_ from album album0_ where album0_.id=?
Hibernate: select artistmusi0_.music_id as music_id4_3_0_, artistmusi0_.id as id1_3_0_, artistmusi0_.id as id1_3_1_, artistmusi0_.artist_id as artist_i3_3_1_, artistmusi0_.deleted_at as deleted_2_3_1_, artistmusi0_.music_id as music_id4_3_1_, artist1_.id as id1_1_2_, artist1_.created_at as created_2_1_2_, artist1_.updated_at as updated_3_1_2_, artist1_.activity as activity4_1_2_, artist1_.agency as agency5_1_2_, artist1_.debut as debut6_1_2_, artist1_.debut_music as debut_mu7_1_2_, artist1_.deleted_at as deleted_8_1_2_, artist1_.fan_club as fan_club9_1_2_, artist1_.gender as gender10_1_2_, artist1_.genre as genre11_1_2_, artist1_.artist_id as artist_18_1_2_, artist1_.information as informa12_1_2_, artist1_.is_concoction as is_conc13_1_2_, artist1_.is_group as is_grou14_1_2_, artist1_.name as name15_1_2_, artist1_.nationality as nationa16_1_2_, artist1_.type as type17_1_2_ from artist_music artistmusi0_ left outer join artist artist1_ on artistmusi0_.artist_id=artist1_.id where artistmusi0_.music_id=?
artist1
artist2
Hibernate: select artistmusi0_.music_id as music_id4_3_0_, artistmusi0_.id as id1_3_0_, artistmusi0_.id as id1_3_1_, artistmusi0_.artist_id as artist_i3_3_1_, artistmusi0_.deleted_at as deleted_2_3_1_, artistmusi0_.music_id as music_id4_3_1_, artist1_.id as id1_1_2_, artist1_.created_at as created_2_1_2_, artist1_.updated_at as updated_3_1_2_, artist1_.activity as activity4_1_2_, artist1_.agency as agency5_1_2_, artist1_.debut as debut6_1_2_, artist1_.debut_music as debut_mu7_1_2_, artist1_.deleted_at as deleted_8_1_2_, artist1_.fan_club as fan_club9_1_2_, artist1_.gender as gender10_1_2_, artist1_.genre as genre11_1_2_, artist1_.artist_id as artist_18_1_2_, artist1_.information as informa12_1_2_, artist1_.is_concoction as is_conc13_1_2_, artist1_.is_group as is_grou14_1_2_, artist1_.name as name15_1_2_, artist1_.nationality as nationa16_1_2_, artist1_.type as type17_1_2_ from artist_music artistmusi0_ left outer join artist artist1_ on artistmusi0_.artist_id=artist1_.id where artistmusi0_.music_id=?
artist1
artist2
[{id=1, title=music1, lyrics=null, composer=composer, songwriter=writer, arranger=null, likes=null, hits=null, releaseDate=null, deletedAt=null, isTitle=null, thumbnail=null, genre=null, album={id=1, title=album1, type=null, publishDate=null, publisher=null, agency=null, information=null, deletedAt=null}, artists=[{id=1, name=artist1, information=null, fanClub=null, activity=null, genre=null, nationality=null, agency=null, gender=null, type=null, debutMusic=null, isGroup=null, isConcoction=null, debut=null, deletedAt=null}, {id=2, name=artist2, information=null, fanClub=null, activity=null, genre=null, nationality=null, agency=null, gender=null, type=null, debutMusic=null, isGroup=null, isConcoction=null, debut=null, deletedAt=null}]}, {id=2, title=music2, lyrics=null, composer=composer, songwriter=writer, arranger=null, likes=null, hits=null, releaseDate=null, deletedAt=null, isTitle=null, thumbnail=null, genre=null, album={id=1, title=album1, type=null, publishDate=null, publisher=null, agency=null, information=null, deletedAt=null}, artists=[{id=1, name=artist1, information=null, fanClub=null, activity=null, genre=null, nationality=null, agency=null, gender=null, type=null, debutMusic=null, isGroup=null, isConcoction=null, debut=null, deletedAt=null}, {id=2, name=artist2, information=null, fanClub=null, activity=null, genre=null, nationality=null, agency=null, gender=null, type=null, debutMusic=null, isGroup=null, isConcoction=null, debut=null, deletedAt=null}]}]
Hibernate: select artistmusi0_.id as id1_3_, artistmusi0_.artist_id as artist_i3_3_, artistmusi0_.deleted_at as deleted_2_3_, artistmusi0_.music_id as music_id4_3_ from artist_music artistmusi0_
Hibernate: select artist0_.id as id1_1_0_, artist0_.created_at as created_2_1_0_, artist0_.updated_at as updated_3_1_0_, artist0_.activity as activity4_1_0_, artist0_.agency as agency5_1_0_, artist0_.debut as debut6_1_0_, artist0_.debut_music as debut_mu7_1_0_, artist0_.deleted_at as deleted_8_1_0_, artist0_.fan_club as fan_club9_1_0_, artist0_.gender as gender10_1_0_, artist0_.genre as genre11_1_0_, artist0_.artist_id as artist_18_1_0_, artist0_.information as informa12_1_0_, artist0_.is_concoction as is_conc13_1_0_, artist0_.is_group as is_grou14_1_0_, artist0_.name as name15_1_0_, artist0_.nationality as nationa16_1_0_, artist0_.type as type17_1_0_ from artist artist0_ where artist0_.id=?
Hibernate: select music0_.id as id1_4_0_, music0_.created_at as created_2_4_0_, music0_.updated_at as updated_3_4_0_, music0_.album_id as album_i16_4_0_, music0_.arranger as arranger4_4_0_, music0_.composer as composer5_4_0_, music0_.deleted_at as deleted_6_4_0_, music0_.genre as genre7_4_0_, music0_.hits as hits8_4_0_, music0_.is_title as is_title9_4_0_, music0_.likes as likes10_4_0_, music0_.lyrics as lyrics11_4_0_, music0_.release_date as release12_4_0_, music0_.songwriter as songwri13_4_0_, music0_.thumbnail as thumbna14_4_0_, music0_.title as title15_4_0_ from music music0_ where music0_.id=?
Hibernate: select artist0_.id as id1_1_0_, artist0_.created_at as created_2_1_0_, artist0_.updated_at as updated_3_1_0_, artist0_.activity as activity4_1_0_, artist0_.agency as agency5_1_0_, artist0_.debut as debut6_1_0_, artist0_.debut_music as debut_mu7_1_0_, artist0_.deleted_at as deleted_8_1_0_, artist0_.fan_club as fan_club9_1_0_, artist0_.gender as gender10_1_0_, artist0_.genre as genre11_1_0_, artist0_.artist_id as artist_18_1_0_, artist0_.information as informa12_1_0_, artist0_.is_concoction as is_conc13_1_0_, artist0_.is_group as is_grou14_1_0_, artist0_.name as name15_1_0_, artist0_.nationality as nationa16_1_0_, artist0_.type as type17_1_0_ from artist artist0_ where artist0_.id=?
Hibernate: select music0_.id as id1_4_0_, music0_.created_at as created_2_4_0_, music0_.updated_at as updated_3_4_0_, music0_.album_id as album_i16_4_0_, music0_.arranger as arranger4_4_0_, music0_.composer as composer5_4_0_, music0_.deleted_at as deleted_6_4_0_, music0_.genre as genre7_4_0_, music0_.hits as hits8_4_0_, music0_.is_title as is_title9_4_0_, music0_.likes as likes10_4_0_, music0_.lyrics as lyrics11_4_0_, music0_.release_date as release12_4_0_, music0_.songwriter as songwri13_4_0_, music0_.thumbnail as thumbna14_4_0_, music0_.title as title15_4_0_ from music music0_ where music0_.id=?
Hibernate: delete from artist_music where id=?
Hibernate: delete from artist_music where id=?
Hibernate: delete from artist_music where id=?
Hibernate: delete from artist_music where id=?
Hibernate: select music0_.id as id1_4_, music0_.created_at as created_2_4_, music0_.updated_at as updated_3_4_, music0_.album_id as album_i16_4_, music0_.arranger as arranger4_4_, music0_.composer as composer5_4_, music0_.deleted_at as deleted_6_4_, music0_.genre as genre7_4_, music0_.hits as hits8_4_, music0_.is_title as is_title9_4_, music0_.likes as likes10_4_, music0_.lyrics as lyrics11_4_, music0_.release_date as release12_4_, music0_.songwriter as songwri13_4_, music0_.thumbnail as thumbna14_4_, music0_.title as title15_4_ from music music0_
Hibernate: delete from music where id=?
Hibernate: delete from music where id=?
Hibernate: select album0_.id as id1_0_, album0_.created_at as created_2_0_, album0_.updated_at as updated_3_0_, album0_.agency as agency4_0_, album0_.deleted_at as deleted_5_0_, album0_.information as informat6_0_, album0_.publish_date as publish_7_0_, album0_.publisher as publishe8_0_, album0_.title as title9_0_, album0_.type as type10_0_ from album album0_
Hibernate: delete from album where id=?
Hibernate: select artist0_.id as id1_1_, artist0_.created_at as created_2_1_, artist0_.updated_at as updated_3_1_, artist0_.activity as activity4_1_, artist0_.agency as agency5_1_, artist0_.debut as debut6_1_, artist0_.debut_music as debut_mu7_1_, artist0_.deleted_at as deleted_8_1_, artist0_.fan_club as fan_club9_1_, artist0_.gender as gender10_1_, artist0_.genre as genre11_1_, artist0_.artist_id as artist_18_1_, artist0_.information as informa12_1_, artist0_.is_concoction as is_conc13_1_, artist0_.is_group as is_grou14_1_, artist0_.name as name15_1_, artist0_.nationality as nationa16_1_, artist0_.type as type17_1_ from artist artist0_
Hibernate: select members0_.artist_id as artist_18_1_0_, members0_.id as id1_1_0_, members0_.id as id1_1_1_, members0_.created_at as created_2_1_1_, members0_.updated_at as updated_3_1_1_, members0_.activity as activity4_1_1_, members0_.agency as agency5_1_1_, members0_.debut as debut6_1_1_, members0_.debut_music as debut_mu7_1_1_, members0_.deleted_at as deleted_8_1_1_, members0_.fan_club as fan_club9_1_1_, members0_.gender as gender10_1_1_, members0_.genre as genre11_1_1_, members0_.artist_id as artist_18_1_1_, members0_.information as informa12_1_1_, members0_.is_concoction as is_conc13_1_1_, members0_.is_group as is_grou14_1_1_, members0_.name as name15_1_1_, members0_.nationality as nationa16_1_1_, members0_.type as type17_1_1_ from artist members0_ where members0_.artist_id=?
Hibernate: select members0_.artist_id as artist_18_1_0_, members0_.id as id1_1_0_, members0_.id as id1_1_1_, members0_.created_at as created_2_1_1_, members0_.updated_at as updated_3_1_1_, members0_.activity as activity4_1_1_, members0_.agency as agency5_1_1_, members0_.debut as debut6_1_1_, members0_.debut_music as debut_mu7_1_1_, members0_.deleted_at as deleted_8_1_1_, members0_.fan_club as fan_club9_1_1_, members0_.gender as gender10_1_1_, members0_.genre as genre11_1_1_, members0_.artist_id as artist_18_1_1_, members0_.information as informa12_1_1_, members0_.is_concoction as is_conc13_1_1_, members0_.is_group as is_grou14_1_1_, members0_.name as name15_1_1_, members0_.nationality as nationa16_1_1_, members0_.type as type17_1_1_ from artist members0_ where members0_.artist_id=?
Hibernate: delete from artist where id=?
Hibernate: delete from artist where id=?
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
